<?xml version="1.0" encoding="utf-8"?>
<feed xmlns="http://www.w3.org/2005/Atom"><title>Bytepawn - General</title><link href="/" rel="alternate"></link><link href="/feeds/general.atom.xml" rel="self"></link><id>/</id><updated>2020-01-10T00:00:00+01:00</updated><entry><title>Small team planning</title><link href="/small-team-planning.html" rel="alternate"></link><published>2020-01-10T00:00:00+01:00</published><updated>2020-01-10T00:00:00+01:00</updated><author><name>Marton Trencseni</name></author><id>tag:None,2020-01-10:/small-team-planning.html</id><summary type="html">&lt;p&gt;I’ve worked at 5-10 different organizations, most of them were startups or startuppy companies. I’ve done a lot of planning in small teams, and also taken part in company-wide leadership planning. Here I will describe what has worked well for me in small team settings, focusing on time estimation. &lt;br/&gt;&lt;br/&gt; &lt;img src="/images/peak.png" alt="Reaching the peak" style="width: 200px;"/&gt;&lt;/p&gt;</summary><content type="html">&lt;h2&gt;Introduction&lt;/h2&gt;
&lt;p&gt;I’ve worked at 5-10 different organizations, most of them were startups or startuppy companies. I’ve done a lot of planning in small teams, and also taken part in company-wide leadership planning. Here I will describe what has worked well for me in &lt;strong&gt;small team settings&lt;/strong&gt;, focusing on time estimation.&lt;/p&gt;
&lt;h2&gt;Team activity&lt;/h2&gt;
&lt;p&gt;Team planning typically occurs at the beginning of each quarter or half. It is an activity for whole team; everybody needs to own the plan. The techlead or engineering manager cannot do it alone, because there are multiple steps where everybody’s input is needed to generate project ideas and estimates.&lt;/p&gt;
&lt;h2&gt;Planning vs goaling&lt;/h2&gt;
&lt;p&gt;The focus here is on planning. Planning is not the same as goaling.&lt;/p&gt;
&lt;p&gt;&amp;nbsp; &amp;nbsp; &lt;strong&gt;Goal&lt;/strong&gt; = what we want to do&lt;/p&gt;
&lt;p&gt;&amp;nbsp; &amp;nbsp; &lt;strong&gt;Plan&lt;/strong&gt; = what we can do&lt;/p&gt;
&lt;p&gt;A plan incorporates resource and dependency contraints: people, time, money, team structure, software architecture, etc. Another way of saying this:&lt;/p&gt;
&lt;p&gt;&amp;nbsp; &amp;nbsp; &lt;strong&gt;Goal&lt;/strong&gt; = where we want to get&lt;/p&gt;
&lt;p&gt;&amp;nbsp; &amp;nbsp; &lt;strong&gt;Plan&lt;/strong&gt; = how we get there&lt;/p&gt;
&lt;p&gt;When goaling, if you don’t take into account resource and dependency contraints (=what makes a good plan), the goals will be unrealistic. When planning, if you don’t have a goaling direction, you won’t work toward the right direction. Planning and goaling go hand in hand, it’s a back-and-forth.&lt;/p&gt;
&lt;p&gt;&lt;img src="/images/peak.png" alt="Planning peak" style="width: 200px;"/&gt;&lt;/p&gt;
&lt;p&gt;In my experience, &lt;strong&gt;a lot of people are bad at planning, and tend to overpromise and underdeliver&lt;/strong&gt;. I prefer to underpromise and overdeliver.&lt;/p&gt;
&lt;blockquote&gt;
&lt;p&gt;When I was a young Techlead , the first time I did small team planning, we spent hours writing lots of sticky notes, estimating mandays, we channeled &lt;a href="https://en.wikipedia.org/wiki/Fred_Brooks"&gt;Fred Brooks&lt;/a&gt;. At the end, when we were finished, we leaned back and looked at our plan, and I laughed out. I said: “Somehow we managed to fit all projects we can think of into the quarter! We’ll be laid off because there will be nothing left to do.” It was a joke. We overpromised and underdelivered, because we didn’t know how to make a good plan.*&lt;/p&gt;
&lt;/blockquote&gt;
&lt;h2&gt;Counting days&lt;/h2&gt;
&lt;p&gt;The basic process is straightforward:&lt;/p&gt;
&lt;ol&gt;
&lt;li&gt;Draw a calendar on the whiteboard. Columns are people, rows are weeks in the quarter / half that you’re planning for. If you want, make cells for days, but I usually don’t. The point of the exercise is to count how many weeks we will have to work on “new stuff”.&lt;/li&gt;
&lt;li&gt;Count how many weeks are in the quarter, and make a row for each week. Number the week as the week-of-year, eg. W44.&lt;/li&gt;
&lt;li&gt;Cross out any weeks that are in the past.&lt;/li&gt;
&lt;li&gt;If you’re doing this exercise in the middle of the week, cross out the current week.&lt;/li&gt;
&lt;li&gt;Cross out bank holidays.&lt;/li&gt;
&lt;li&gt;Cross out days for team offsites, hackathons, etc.&lt;/li&gt;
&lt;li&gt;All team members cross out weeks in their column when they will be on vacation. If you’re unsure which week it is, take a guess.&lt;/li&gt;
&lt;li&gt;Mark 1-2 day per week for interrupts. In my line of work, for a generalist data team, there are lots of interrupts (same goes for many software engineering teams). In my experience, 20-30% of time should be assumed to be interrupts (infrastructure breaks, logs change, new data breaks a pipe, dashboards break, ML model regresses, questions from PMs, SWEs, designers, AMs, sales, marketing, finance...)&lt;/li&gt;
&lt;li&gt;Estimate meeting load. Everybody open their calendar, and look at the last 2 weeks to estimate meeting load. Imagine compressing your meeting load into full days, and cross out that many days. Note: meetings are not interrupts here.&lt;/li&gt;
&lt;li&gt;The Techlead for a 4+ person team will spend 50%+ of their time on management duties. Take that time off from that person’s column.&lt;/li&gt;
&lt;/ol&gt;
&lt;p&gt;At this point, there is a per-person budget left. This is how much time is available to work on new stuff, to have direct impact.&lt;/p&gt;
&lt;p&gt;This is what an in progress planning table might look like:&lt;/p&gt;
&lt;p&gt;&lt;img src="/images/planning-table.png" alt="Planning table" style="width: 400px;"/&gt;&lt;/p&gt;
&lt;h2&gt;Direct vs indirect impact&lt;/h2&gt;
&lt;p&gt;Sometimes people get upset because it seems too little time is left for new stuff. You could argue that putting aside days for interrupts and meetings is "planning to underperform". I would not agree with that, it's just a realistic plan.&lt;/p&gt;
&lt;p&gt;On the one hand, yes, we all are spending a lot of time in meetings, and some of the meetings are useless; but that has nothing to do with planning. Planning may draw attention to it, but it’s not a planning issue. To decrease interrupts, have your team set up the interrupt magnet system (=an assigned team member who handles interrupts that day/week, same idea for infra magnets). If you manage to push down interrupts and meeting time, great, you'll have more time and will end up underpromising and underdelivering, and on the next cycle you can adjust down your interrupt/meeting estimate.&lt;/p&gt;
&lt;p&gt;&lt;img src="/images/indirect-impact.png" alt="Indirect impact" style="width: 400px;"/&gt;&lt;/p&gt;
&lt;p&gt;On the other hand, and this is the point: a lot of impact is delivered indirectly. It may be realized by another team, or later. Spending time talking to people or fixing stuff is not underperforming. A great example is a hackathon: at Facebook, a lot of important features were first built at hackathon, even though, in terms of planning, a hackathon would be “crossed-off time”. Hackathon also have a lot of other positive effects.&lt;/p&gt;
&lt;h2&gt;Project list&lt;/h2&gt;
&lt;p&gt;As a team, write a list of projects the team would like to work on, taking into account existing goals. Have everybody write their ideas on a sticky note (before the meeting), and then collate the ideas together on the whiteboard. The goal is to make sure everybody can give their ideas without being over-talked in a meeting setting.&lt;/p&gt;
&lt;p&gt;&lt;img src="/images/stickynotes-whiteboard.png" alt="Sticky notes whiteboard" style="width: 400px;"/&gt;&lt;/p&gt;
&lt;p&gt;The next step is to decide how much work to allocate to each project, who works on each. I will skip the “who” and figuring out dependencies here.&lt;/p&gt;
&lt;h2&gt;Planning poker&lt;/h2&gt;
&lt;p&gt;The point of &lt;a href="https://en.wikipedia.org/wiki/Planning_poker"&gt;planning poker&lt;/a&gt; is to make sure everybody who is involved in a project can give their manday estimate, without being influenced without others who speak before. The easiest way to do it is to have people write their estimate on a sticky note, and then share it. Super-high and super-low estimates should be explained. The goal is to arrive at a realistic estimate. “Realistic” is not the same as “consensus”, eg. you should not take an average or median of estimates. People who are better at planning (=usually more senior people) need to have more weight, while people who are gaining experience should use this experience to learn how to do a better job estimasting.&lt;/p&gt;
&lt;h2&gt;Mandays&lt;/h2&gt;
&lt;p&gt;Be careful about mandays versus calendar days when estimating projects: &lt;strong&gt;Pure mandays&lt;/strong&gt; is how much time you’d spend on something if you were to work uninterrupted. &lt;strong&gt;Real mandays&lt;/strong&gt; is how much time you will spend on it in real life, since you’re less efficient because of interrupts (but not counting time spent in interrupts and meetings). &lt;strong&gt;Calendar days&lt;/strong&gt; (calendar weeks) is how much time will elapse between start and end, also counting interrupt time and meetings, weekends. For example if your compressed meeting load is 1 day per week, 1 day per week is interrupts, and a task is estimated to take 4-5 pure mandays, then probably it will take 6 mandays, and overall it will consume 2 calendar weeks (1+1+3+weekend+1+1+3+weekend).&lt;/p&gt;
&lt;p&gt;&lt;strong&gt;Different people think in different quantities when planning (pure mandays, real mandays, calendar days). Make sure you’re talking about the same thing.&lt;/strong&gt;&lt;/p&gt;
&lt;h2&gt;Coarse-graining&lt;/h2&gt;
&lt;p&gt;I prefer to keep the plan coarse-grained, and think of bigger projects/tasks, that are at least 1-2 weeks in size. I think trying to think ahead in smaller granularities is unrealistic. Good and motivated people will be able to manage the sub-tasks within coarse-grained projects during the quarter on their own (juniors with regular help).&lt;/p&gt;
&lt;h2&gt;Timing&lt;/h2&gt;
&lt;p&gt;At this point we know how much time each person has available, projects, and who works on what projects, so we can put it into the table, taking into account dependencies. This gives our estimated completion times. In my experience, for software, at best month-grained can be taken seriously (“We will start working on this in Nov, we will ship sometime in Dec”), but often only quarter-granularity is dependable ("We will ship in Q4").&lt;/p&gt;
&lt;h2&gt;Projects and goals&lt;/h2&gt;
&lt;p&gt;Planning and goaling is a back-and-forth. If the plans and goals are too far off, one or both has to be adjusted; maybe the goal was too aggressive and needs to come down, or the team needs to find additional time this quarter and aggressively say no to interrupts and cancel meetings, or both.&lt;/p&gt;
&lt;h2&gt;Jiggle&lt;/h2&gt;
&lt;p&gt;I like to give space/time to reflect and adjust. After the initial meeting, we take a few days to think about it, and schedule a second, finalizing meeting, where we have an opportunity to make adjustments, add in stuff we missed.&lt;/p&gt;
&lt;h2&gt;Meeting minutes&lt;/h2&gt;
&lt;p&gt;The techlead or manager should take a picture of the table, enter it into a spreadsheet, and share it with the team. Then, if the team also uses software such as &lt;a href="https://trello.com"&gt;Trello&lt;/a&gt; or &lt;a href="https://jira.atlassian.com"&gt;Jira&lt;/a&gt;, enter it there.&lt;/p&gt;</content><category term="planning"></category><category term="teams"></category><category term="goaling"></category></entry><entry><title>Personal goaling</title><link href="/personal-goaling.html" rel="alternate"></link><published>2019-12-22T00:00:00+01:00</published><updated>2019-12-22T00:00:00+01:00</updated><author><name>Marton Trencseni</name></author><id>tag:None,2019-12-22:/personal-goaling.html</id><summary type="html">&lt;p&gt;The meta-goal of goaling is to stretch yourself to achieve more, and to feel good about what you’ve achieved. Whatever happened this year, it’s always possible to achieve a lot more and feel better about yourself next year. To hijack a Feynman quote, &lt;em&gt;there is plenty of room at the top&lt;/em&gt;.&lt;br/&gt;&lt;br/&gt;&lt;img src="/images/run2019_1.PNG" alt="2019 running" style="width: 400px;"/&gt;&lt;/p&gt;</summary><content type="html">&lt;p&gt;I’ve been using a system of setting and tracking personal goals for the last 3 years. For me, this way has worked out well, so I’m sharing it here. This is not meant to be prescriptive (“do this”), it’s descriptive (“this worked for me”). Here is my &lt;a href="https://docs.google.com/document/d/1J_eay8axCVOTZ9gDk8wLiI3cdI5Qx4r_u318YTOsFg8/edit?usp=sharing"&gt;2019 master goaling doc&lt;/a&gt;, shown inline at the bottom of the page.&lt;/p&gt;
&lt;h2&gt;The meta-goal of goaling&lt;/h2&gt;
&lt;p&gt;The meta-goal of goaling is to stretch yourself to achieve more, and to feel good about what you’ve achieved. Whatever happened this year, it’s always possible to achieve a lot more and feel better about yourself next year. To hijack a Feynman quote, &lt;em&gt;there is plenty of room at the top&lt;/em&gt;.&lt;/p&gt;
&lt;h2&gt;More is better&lt;/h2&gt;
&lt;p&gt;I find that having lots of goals is fun. Life has multiple arenas: family, fitness, savings, projects, work, traveling, reading, writing, etc. I try to write down multiple goals for each arena, usually about 5 each. In the end, my complete list of goals is usually 2 pages of bullets and sub-bullets in a Google Doc.&lt;/p&gt;
&lt;h2&gt;50/50 goaling&lt;/h2&gt;
&lt;p&gt;This is something I learned while working at Facebook. There the philosophy was that goaling should be aggressive; on average you should hit 50% of your goals (or, 50% of teams should hit their goals). When I set my goals at the beginning of the year, I usually think “I’d be happy to hit 50% of these”, but then I usually end up hitting a bit more, like 60-70%. This always reminds me that there is so much more room to stretch and do more. Very few people are near their capacity, I am definitely not.&lt;/p&gt;
&lt;h2&gt;Use colors&lt;/h2&gt;
&lt;p&gt;I use a Google Doc to write down the goals as bullet points (like “run 1000km”), and separate Google Sheets to track my daily progress towards the goal. I use red, green and orange colors: green when I accomplished what I needed to that day to hit the goal, or when I hit the goal, orange for a missed day, and red if the verdict is out and I missed the goal. These colors carry strong psychological connotation and put pressure---the good kind of pressure---on me to hit my goals. Looking at green is pleasant, green means good.&lt;/p&gt;
&lt;p&gt;&lt;img src="/images/track2019.png" alt="2019 goals" style="width: 400px;"/&gt;&lt;/p&gt;
&lt;h2&gt;Visualize numeric goals on charts&lt;/h2&gt;
&lt;p&gt;For numeric goals (for me, this is fitness related goals) I use a Google Spreadsheet. The master tab has a daily log of activities. One row is one calendar day; if I didn’t do anything that day, it’s orange. If I did, it’s green. Separate tabs show various line charts, showing my progress as I track toward my yearly goal. Charts are another type of visualization that have a strong psychological effect on me in terms of motivating me to get the line to move up and to the right.&lt;/p&gt;
&lt;p&gt;&lt;img src="/images/run2019_1.PNG" alt="2019 goals" style="width: 400px;"/&gt;&lt;/p&gt;
&lt;h2&gt;Show the goal line&lt;/h2&gt;
&lt;p&gt;For goals such as "run 1000km", where I continuously make progress, I break it into a daily goal (1000/365 km per day), and show that goal line on the chart in green. This is another strong visual cue that motivates me, I have to follow the goal line.&lt;/p&gt;
&lt;h2&gt;Look at the goals daily&lt;/h2&gt;
&lt;p&gt;Goaling only works if you care about the goals. The best way to do that is to look at the goals all the time. I have 3 tabs (one master Google Doc, one Google Spreadsheet for fitness and one Google Spreadsheet for financials) pinned open in Chrome, and look at them daily. I always know how I’m tracking towards my goals.&lt;/p&gt;
&lt;h2&gt;Set cumulative goals&lt;/h2&gt;
&lt;p&gt;I find setting cumulative goals like “run 1000km in 2019” works much better for me compared to weekly goals like “run 20km per week in 2019”. The problem with the weekly version is, what happens if you miss your goal on one week? Have you already missed the yearly goal? How many weeks are you allowed to misss? Setting a cumulative goal like “run 1000km in 2019” is great, because it becomes a game: if I don’t go running on a week, no problem, but I’ll have to make it up the following weeks. And knowing that making up is tough, I don’t miss my weekly targets unless there’s a good reason (like illness).&lt;/p&gt;
&lt;h2&gt;Set S and L goals&lt;/h2&gt;
&lt;p&gt;Sometimes it’s not clear what the right goal is. Should the target be 500km or 1,000km of running? When I don’t know what the realistic goal is, I set a S and an L goal. Some time down the line I will see if the S goal is too easy of if the L goal is too hard, and focus on hitting the right one. If I decide to hit the S goal, I keep the L goal on the list (marked in red); it’ll be a good stretch goal for next year.&lt;/p&gt;
&lt;h2&gt;Set realistic goals&lt;/h2&gt;
&lt;p&gt;If you set unrealistic goals, you will know deep down that you will never hit your goals, or it is very unlikely. If you’re unsure what’s realistic, set S and L goals.&lt;/p&gt;
&lt;h2&gt;Break your goals into H1 and H2 goals&lt;/h2&gt;
&lt;p&gt;If your goal is to run 1,000km in a year, break it down into a 500km goal for H1 (Half 1), and an overall goal of 1,000km for H2. This way, when you hit the 500 km sub-goal in June, you can green it out and feel good.&lt;/p&gt;
&lt;h2&gt;Renegotiate&lt;/h2&gt;
&lt;p&gt;These are personal goals. The meta-goal of goaling is to stretch yourself to do more, and feel good about it on the way. But there's no point to feeling bad about not hitting an unrealistic goal. If you’re some months into the year, and you realize that a goal was too ambitious, it’s okay to re-label it as an L goal and introduce an S goal. Also, sometimes circumstances change (new job, new city, family), and goals become unrealistic; in that case, it’s okay to renegotiate the goal with yourself, and introduce a new, different, better fitting goal.&lt;/p&gt;
&lt;h2&gt;Use leading metrics&lt;/h2&gt;
&lt;p&gt;There are leading metrics and lagging metrics. A leading metric is about something actionable today, like going running or cutting calorie intake. A lagging metric is the outcome of the leading metric, like “80kg body mass”. I set my goals as leading metrics, because they can be translated to something I will do daily, and I can keep track of my gradual progress. Also, I find goals like “lose 10kg” poor, because what happens once I lose 10kg? Suppose I lose it by September? Am I done with my yearly goal? If I just gain it back, that’s a fleeting accomplishment. I find it better to set leading metrics goals, which can be translated to daily actions and weekly cadence, ie. routine. It’s easier to maintain your weight if you’re used to running and working out a lot and controlling your calorie intake, and if you feel bad if you miss a day.&lt;/p&gt;
&lt;h2&gt;Should be up to you&lt;/h2&gt;
&lt;p&gt;The goals should be up to you, so "get promoted" is not a good personal goal, because it's not up to you: the company could have a bad year, you could get a new manager, etc. Instead, figure out what are the best things you can do to get promoted ("land 4 big features", "mentor 2 juniors", "present at 2 conferences", "organize an offsite") and write those down. A good goal is when you feel bad if you didn't hit it and can blame it on yourself for not trying hard enough.&lt;/p&gt;
&lt;h2&gt;Track secondary metrics&lt;/h2&gt;
&lt;p&gt;Secondary metrics are, for example, "% active days" for your activities, or the location split of your running kilometers. Since you're tracking your metrics anyway, these are easy to split and visualize and can give you interesting insights ("wow, I do most of my running indoors").&lt;/p&gt;
&lt;p&gt;&lt;img src="/images/runloc2019.png" alt="2019 running" style="width: 400px;"/&gt;&lt;/p&gt;
&lt;h2&gt;External commitments&lt;/h2&gt;
&lt;p&gt;External commitments, created on purpose by you, can be a great tool for hitting your goals. Simply go around and tell everybody what your goal is. For example, in 2008 I decided to do an Ironman. I gave myself a year to prepare, and in that year I told everybody I met I'm going to do an Ironman. There was no way I could go back on it, I told everybody!&lt;/p&gt;
&lt;h2&gt;Dopamine hits&lt;/h2&gt;
&lt;p&gt;Using daily tracking, colors and cumulative goals (eg. running kilometers accumulate like gold in an RTS game) already gives you a dopamine hit every time you do something and update your tracking. You can get an additional hit if you post about it on Facebook. I think there is social good in this, because it may motivate others to also go out and do something.&lt;/p&gt;
&lt;h2&gt;Sample goals&lt;/h2&gt;
&lt;p&gt;&lt;a href="https://docs.google.com/document/d/1J_eay8axCVOTZ9gDk8wLiI3cdI5Qx4r_u318YTOsFg8/edit?usp=sharing"&gt;My 2019 master goaling doc&lt;/a&gt;, after redactions:&lt;/p&gt;
&lt;iframe src="https://docs.google.com/document/d/e/2PACX-1vQn49UZbLT-v88d6qu1ojz1dsz2bfhAW0C0DdZDIKBmYHMl1ApycI9a4_3McXCr4MfnBsQ4ZyzYArmu/pub?embedded=true" style="width: 1000px; height: 800px;"&gt;&lt;/iframe&gt;</content><category term="self help"></category><category term="goaling"></category></entry><entry><title>What not to spend time on</title><link href="/what-not-to-spend-time-on.html" rel="alternate"></link><published>2018-07-23T00:00:00+02:00</published><updated>2018-07-23T00:00:00+02:00</updated><author><name>Marton Trencseni</name></author><id>tag:None,2018-07-23:/what-not-to-spend-time-on.html</id><summary type="html">&lt;p&gt;Warren Buffett says deciding what &lt;strong&gt;not&lt;/strong&gt; to spend time on is just as important as deciding what to spend time on.&lt;br/&gt;&lt;br/&gt;&lt;img src="/images/warren-buffett.jpg" alt="Warren Buffett" style="width: 400px;"/&gt;&lt;/p&gt;</summary><content type="html">&lt;h2&gt;Introduction&lt;/h2&gt;
&lt;p&gt;A couple of years ago I read &lt;a href="http://www.euclidean.com/the-essays-of-warren-buffett-review-lessons-quotes/"&gt;Warren Buffett's books&lt;/a&gt; and some stories about him. One of the lessons stuck with me, it's something I think about regularly when deciding what to spend time on. Below is an excerpt from &lt;a href="https://jamesclear.com/buffett-focus"&gt;James Clear's website&lt;/a&gt;.&lt;/p&gt;
&lt;h2&gt;The story of Mike Flint&lt;/h2&gt;
&lt;p&gt;Mike Flint was Buffett's personal airplane pilot for 10 years. (Flint has also flown four US Presidents, so I think we can safely say he is good at his job.) According to Flint, he was talking about his career priorities with Buffett when his boss asked the pilot to go through a 3-step exercise. Here's how it works…&lt;/p&gt;
&lt;p&gt;&lt;strong&gt;STEP 1:&lt;/strong&gt; Buffett started by asking Flint to write down his top 25 career goals. So, Flint took some time and wrote them down. (Note: you could also complete this exercise with goals for a shorter timeline. For example, write down the top 25 things you want to accomplish this week.)&lt;/p&gt;
&lt;p&gt;&lt;strong&gt;STEP 2:&lt;/strong&gt; Then, Buffett asked Flint to review his list and circle his top 5 goals. Again, Flint took some time, made his way through the list, and eventually decided on his 5 most important goals.&lt;/p&gt;
&lt;p&gt;&lt;strong&gt;STEP 3:&lt;/strong&gt; At this point, Flint had two lists. The 5 items he had circled were &lt;strong&gt;List A&lt;/strong&gt; and the 20 items he had not circled were &lt;strong&gt;List B&lt;/strong&gt;.&lt;/p&gt;
&lt;p&gt;Flint confirmed that he would start working on his top 5 goals right away. And that's when Buffett asked him about the second list, &lt;em&gt;“And what about the ones you didn't circle?”&lt;/em&gt;&lt;/p&gt;
&lt;p&gt;&lt;img src="/images/warren-buffett.jpg" alt="Warren Buffett" style="width: 600px;"/&gt;&lt;/p&gt;
&lt;p&gt;Flint replied, &lt;em&gt;“Well, the top 5 are my primary focus, but the other 20 come in a close second. They are still important so I’ll work on those intermittently as I see fit. They are not as urgent, but I still plan to give them a dedicated effort.”&lt;/em&gt;&lt;/p&gt;
&lt;p&gt;To which Buffett replied, &lt;em&gt;“No. You’ve got it wrong, Mike. Everything you didn’t circle just became your Avoid-At-All-Cost list. No matter what, these things get no attention from you until you’ve succeeded with your top 5.”&lt;/em&gt;&lt;/p&gt;
&lt;h2&gt;What I don't spend time on&lt;/h2&gt;
&lt;p&gt;I think this is great advice, it's something I think about regularly. I will list 2 things here that I decided not to spend time on after reading this Warren Buffett bit a few yeas ago.&lt;/p&gt;
&lt;p&gt;&lt;strong&gt;Quantum Field Theory&lt;/strong&gt; (and research-level physics in general). I have a degree in Physics, it's a second degree I got mostly for fun and curiousity. Getting it has been one of the greatest decisions of my life, learning and doing Physics has been continually paying off ever since than, both personally and for work (Computer Science + Physics = Data Science). As a physicist you learn the deep insights of your predecessors, but also that with certainty they are wrong in some sense, and over time their achievements will be "just" an approximation or a special case. So physicists are always learning and adjusting their perspective. Physicists also have a keen sense for measurements, statistics, errors, which is very useful when dealing with numbers in the real world.&lt;/p&gt;
&lt;p&gt;So after I got the Msc degree in Physics back in 2008, I started a Phd that I never finished because I went off to do a startup. Maybe it's because I never finished it, but for many years afterwards, I had this romantic notion and kept going back to Physics in my free time, reading papers, books. I once even had a yearly goal of writing a paper and submitting it to a journal. I actually did it, I wrote a short paper titled &lt;a href="https://arxiv.org/abs/1208.4990"&gt;Pure Lattice Gauge Theory in the Expanding Universe&lt;/a&gt;, and submitted it to the Physical Review Letters (PRL), but got rejected (most papers get rejected at first, &lt;em&gt;real&lt;/em&gt; scientists keep improving and submitting). Since I don't &lt;em&gt;really&lt;/em&gt; care about getting into a journal, I didn't spend any more time on it, now it just sits on Arxiv [1].&lt;/p&gt;
&lt;p&gt;So, when I decided not to spend time on Physics anymore, it was not a trivial thing to do. I really like to do Physics, even in my spare time. But at the end of the day, I'm not in Academia, so I don't actually have time to follow topic(s) of research like real scientists do and figure out how to contribute. Also, academia is pretty crowded, and research topics have become very specialized. It's not really a good investment of time for me; investing my time into things related to software/startups has much higher potential impact and payoff. I also stopped reading Physics blogs, all the drama around string theory is fun but ultimately just a distraction.&lt;/p&gt;
&lt;p&gt;&lt;strong&gt;Haskell.&lt;/strong&gt; I first came into contact with Haskell in 2013 when working at Prezi. There are a lot of things that are intesting about Haskell: it's a strongly typed, purely functional language with type classes, type inference, etc. You can do really cool things with Haskell, or so it seems at first. In 2013, before systems like &lt;a href="http://bytepawn.com/fetchr-airflow.html#fetchr-airflow"&gt;Airflow&lt;/a&gt; were opensourced by Airbnb, there was no good standard open source ETL system; but we needed one at Prezi, to replace the bash hairball we had. We used this project as a testing ground for Haskell, and wrote an ETL framework in Haskell (I think we called it Datapipe). We spent about 3-6 months on it and it was a big disappointment. Although we put it into production at one point, it was quickly replaced by a re-write (this time in Go, which I believe is still in production). At a later point I tried using Haskell for a personal project for representing Physics equations and quantities, and also ran into major/deep problems (oddly, I found it easier to model what I wanted with C++ templates of all things).&lt;/p&gt;
&lt;p&gt;Despite all these failures, I continued to be interested in Haskell. Although I adopted a critical stance, and usually argued against it in conversations, I assumed &lt;em&gt;"it's just me, I don't "get it"&lt;/em&gt;. But I never found or really saw good reasons and generalizable examples where using Haskell in production really made sense. So when I read the Warren Buffett bit, I knew that Haskell is one of those things that I have to stop spending time on, it's just not a practical thing for me to use. I share &lt;a href="http://functionaltalks.org/2013/08/26/john-carmack-thoughts-on-haskell/"&gt;John Carmack's stance&lt;/a&gt;, he views Haskell as a good source for ideas to use in imperative languages like C++.&lt;/p&gt;
&lt;h2&gt;Conclusion&lt;/h2&gt;
&lt;p&gt;I don't think spending time reading/writing Physics papers or Haskell has been a waste for me. Far from it. I learned a lot doing these things. But I've also determined that investing more time into them is not worth it right now. Remembering Warren Buffett and his pilot is a great way to remind myself to stick to it, and spend time on other, potentially more impactful things [2].&lt;/p&gt;
&lt;p&gt;-&lt;/p&gt;
&lt;p&gt;[1] A &lt;a href="https://arxiv.org/abs/1405.6665"&gt;PRD paper&lt;/a&gt; later referenced it and called it "pioneering work", but I'm pretty sure it's not.&lt;/p&gt;
&lt;p&gt;[2] Having said that, if I were to go on a sabbatical, doing Physics would be fair game. The point of sabbatical is to take time off from the normal pursuit of things and spend time on more risky/fun projects, in a timeboxed way.&lt;/p&gt;</content><category term="warren"></category><category term="buffett"></category><category term="self"></category><category term="help"></category><category term="physics"></category><category term="haskell"></category></entry></feed>